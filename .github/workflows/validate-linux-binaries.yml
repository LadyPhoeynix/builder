name: Validate binary images

on:
  workflow_dispatch:
  push:
    branches:
      -main
      -andysamfb
    paths:
      - .github/workflows/validate-linux-binaries.yml
  pull_request:
    paths:
      - .github/workflows/validate-linux-binaries.yml
jobs:
  generate-conda-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: conda
      os: linux
      channel: nightly
  generate-wheel-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: wheel
      os: linux
      channel: nightly
  generate-libtorch-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: libtorch
      os: linux
      channel: nightly
  validate-linux-binaries-conda:
    needs: generate-conda-matrix
    strategy:
      matrix:
        ${{ fromJson(needs.generate-conda-matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.validation_runner }}
    steps:
      - name: Checkout PyTorch builder
        uses: actions/checkout@v2
      - name: Validate binary conda
        uses: ./.github/actions/validate-binary
        with:
          gpu_arch_type: ${{ matrix.gpu_arch_type }}
          gpu_arch_ver: ${{ matrix.gpu_arch_version }}
          installation: ${{ matrix.installation }}
          desired_cuda: ${{ matrix.desired_cuda }}
          python_version: ${{ matrix.python_version }}
          dev_toolset: ''
          package_type: conda
  validate-linux-binaries-wheels:
    needs: generate-wheel-matrix
    strategy:
      matrix:
        ${{ fromJson(needs.generate-wheel-matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.validation_runner }}
    steps:
      - name: Checkout PyTorch builder
        uses: actions/checkout@v2
      - name: Validate binary wheel
        uses: ./.github/actions/validate-binary
        with:
          gpu_arch_type: ${{ matrix.gpu_arch_type }}
          gpu_arch_ver: ${{ matrix.gpu_arch_version }}
          installation: ${{ matrix.installation }}
          desired_cuda: ${{ matrix.desired_cuda }}
          python_version: ${{ matrix.python_version }}
          dev_toolset: ''
          package_type: wheel
  validate-linux-libtorch-binaries:
    needs: generate-libtorch-matrix
    strategy:
      matrix:
        ${{ fromJson(needs.generate-libtorch-matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.validation_runner }}
    env:
      PYTHON_VERSION: ${{ matrix.python_version }}
    steps:
      - name: Checkout PyTorch builder
        uses: actions/checkout@v2
      - name: Install pytorch and smoke test
        env:
          INSTALLATION: ${{ matrix.installation }}
          ENV_NAME: conda-env-${{ github.run_id }}
          DESIRED_PYTHON: ${{ matrix.python_version }}
          DESIRED_CUDA: ${{ matrix.desired_cuda }}
          DESIRED_DEVTOOLSET: ${{ matrix.devtoolset }}
          PACKAGE_TYPE: libtorch
          LD_LIBRARY_PATH: /usr/local/cuda/lib
        run: |
          sudo apt-get install unzip -y
          set -ex
          curl ${INSTALLATION} -o libtorch.zip
          unzip libtorch.zip
          conda create -yp ${ENV_NAME} python=${{ inputs.python_version }} numpy
          export LD_LIBRARY_PATH="$(dirname $(which python))/lib"
          export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda/lib
          conda run -p ${ENV_NAME} --cwd libtorch env LD_LIBRARY_PATH=${LD_LIBRARY_PATH} bash ./../check_binary.sh
