name: Validate binary  images

on:
  push:
jobs:
#  generate-conda-matrix:
#    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
#    with:
#      package-type: conda
#      os: windows
  validate-windows-binaries-conda:
#    needs: generate-conda-matrix
    strategy:
      matrix:
#        ${{ fromJson(needs.generate-conda-matrix.outputs.matrix) }}
        "include": [
        {
          "python_version": "3.7",
          "gpu_arch_type": "cpu",
          "gpu_arch_version": "",
          "desired_cuda": "cpu",
          "container_image": "pytorch/conda-builder:cpu",
          "package_type": "conda",
          "build_name": "conda-py3_7-cpu",
          "validation_runner": "windows-2019"
        },
        {
          "python_version": "3.7",
          "gpu_arch_type": "cuda",
          "gpu_arch_version": "11.3",
          "desired_cuda": "cu113",
          "container_image": "pytorch/conda-builder:cuda11.3",
          "package_type": "conda",
          "build_name": "conda-py3_7-cuda11_3",
          "validation_runner": "windows-2019-m60"
        },
        {
          "python_version": "3.7",
          "gpu_arch_type": "cpu",
          "gpu_arch_version": "",
          "desired_cuda": "cpu",
          "container_image": "pytorch/conda-builder:cpu",
          "package_type": "conda",
          "build_name": "conda-py3_7-cpu",
          "validation_runner": "macos-m1-12"
        },
        {
          "python_version": "3.7",
          "gpu_arch_type": "cpu",
          "gpu_arch_version": "",
          "desired_cuda": "cpu",
          "container_image": "pytorch/conda-builder:cpu",
          "package_type": "conda",
          "build_name": "conda-py3_7-cpu",
          "validation_runner": "ubuntu-20.04"
        },
        {
          "python_version": "3.8",
          "gpu_arch_type": "cuda",
          "gpu_arch_version": "11.6",
          "desired_cuda": "cu116",
          "container_image": "pytorch/conda-builder:cuda11.6",
          "package_type": "conda",
          "build_name": "conda-py3_8-cuda11_6",
          "validation_runner": "ubuntu-20.04-m60",
          "channel": "test"
        }
        ]
      fail-fast: false
    runs-on: ${{ matrix.validation_runner }}
    steps:
      - name: Checkout PyTorch builder
        uses: actions/checkout@v2
      - name: Install conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python_version }}
          miniconda-version: "latest"
          auto-activate-base: false
          activate-environment: conda-env-${{ github.run_id }}
      - run: conda install --yes numpy
      - if: matrix.desired_cuda == 'cpu'
        run: conda install pytorch torchaudio torchvision cpuonly  -c pytorch
      - if: matrix.desired_cuda == 'cu102'
        run: conda install pytorch torchaudio torchvision cudatoolkit=10.2 -c pytorch
      - if: matrix.desired_cuda == 'cu113'
        run: conda install pytorch torchaudio torchvision cudatoolkit=11.3 -c pytorch
      - if: matrix.desired_cuda == 'cu116'
        run: conda install pytorch torchaudio torchvision pytorch-cuda=11.6 -c pytorch-nightly -c nvidia
      - if: matrix.desired_cuda == 'cu117'
        run: conda intall pytorch torchaudio torchvision pytorch-cuda=11.7 -c pytorch-nightly -c nvidia
      - name: Run smoke test windows
        if:  "contains(matrix.validation_runner, 'win')"
        run: conda run test\smoke_test\smoke_test.py
      - name: Run smoke test non-windows
        if:  "!contains(matrix.validation_runner, 'win')"
        run: conda run test/smoke_test/smoke_test.py